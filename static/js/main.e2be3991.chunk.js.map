{"version":3,"sources":["apiServices/getTrending.js","components/HomePage/HomePage.js","apiServices/getMoviesByQuery.js","components/MoviesPage/MoviesPage.js","apiServices/getMovieById.js","apiServices/getMovieCast.js","components/Cast/Cast.js","apiServices/getMovieReviews.js","components/Reviews/Reviews.js","components/MovieDetailsPage/MovieDetailsPage.js","components/Nav/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["getTrending","mediaType","timeWindow","url","fetch","then","response","json","HomePage","state","movies","mounted","a","this","apiOutput","setState","results","map","movie","to","id","title","React","Component","getMoviesByQuery","query","MoviesPage","onSubmit","e","preventDefault","onChange","currentTarget","value","type","autoComplete","autoFocus","placeholder","getMovieById","movieId","getMovieCast","Cast","cast","props","match","params","actor","profile_path","src","alt","name","character","getMovieReviews","Reviews","reviews","length","review","author","content","MovieDetailsPage","className","backdrop_path","release_date","popularity","overview","genres","reduce","total","current","path","component","Nav","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2be3991.chunk.js","sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst myKey = \"c3df5a3d5b89cc698ddf2b6481fb989c\";\r\n/*\r\nhttps://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\r\nmediaType: all,movie,tv,person\r\ntimeWindow: day,week\r\n*/\r\n\r\nexport default function getTrending(mediaType, timeWindow) {\r\n  const url = `${BASE_URL}/trending/${mediaType}/${timeWindow}?api_key=${myKey}`;\r\n  //console.log(url);\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n","import React from \"react\";\r\nimport { Link /*, Route, Redirect, BrowserRouter*/ } from \"react-router-dom\";\r\nimport getTrending from \"../../apiServices/getTrending.js\";\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n  mounted = false;\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    getTrending(\"movie\", \"day\").then((apiOutput) => {\r\n      //console.log(apiOutput.results);\r\n      if (this.mounted) this.setState({ movies: apiOutput.results });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //console.log(\"unmounted\");\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.mounted && (\r\n        <div>\r\n          <p>Trending today</p>\r\n          <ul>\r\n            {this.state.movies.map((movie) => {\r\n              return (\r\n                <li key={movie.id}>\r\n                  <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst myKey = \"c3df5a3d5b89cc698ddf2b6481fb989c\";\r\n/*\r\nhttps://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\nhttps://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\r\n*/\r\n\r\nexport default function getMoviesByQuery(query) {\r\n  const url = `${BASE_URL}/search/movie/?query=${query}&api_key=${myKey}`;\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n","import React from \"react\";\r\nimport { Link /*, Route, Redirect, BrowserRouter*/ } from \"react-router-dom\";\r\nimport getMoviesByQuery from \"../../apiServices/getMoviesByQuery.js\";\r\n\r\nclass MoviesPage extends React.Component {\r\n  state = {\r\n    movies: [],\r\n    query: \"\",\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    getMoviesByQuery(this.state.query).then((apiOutput) => {\r\n      //console.log(apiOutput.results);\r\n      this.setState({ movies: apiOutput.results });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            onChange={(e) => {\r\n              //console.log(\"name\", e.currentTarget.value);\r\n              this.setState({ query: e.currentTarget.value });\r\n            }}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n          />\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n        <ul>\r\n          {this.state.movies.map((movie) => {\r\n            return (\r\n              <li key={movie.id}>\r\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst myKey = \"c3df5a3d5b89cc698ddf2b6481fb989c\";\r\n/*\r\nhttps://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n*/\r\n\r\nexport default function getMovieById(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${myKey}`;\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst myKey = \"c3df5a3d5b89cc698ddf2b6481fb989c\";\r\n/*\r\nhttps://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\nhttps://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\r\n*/\r\n\r\nexport default function getMovieCast(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${myKey}`;\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n","import React from \"react\";\r\n//import { Link /*, Route, Redirect, BrowserRouter*/ } from \"react-router-dom\";\r\nimport getMovieCast from \"../../apiServices/getMovieCast.js\";\r\n\r\nclass Cast extends React.Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n  mounted = false;\r\n\r\n  async componentDidMount() {\r\n    //console.log(\"#2\", this.props.match.params);\r\n    this.mounted = true;\r\n    getMovieCast(this.props.match.params.movieId).then((apiOutput) => {\r\n      //console.log(apiOutput.cast);\r\n      if (this.mounted) this.setState({ cast: apiOutput.cast });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //console.log(\"unmounted\");\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    const BASE_URL = \"https://image.tmdb.org\"; /*https://www.themoviedb.org*/\r\n    return (\r\n      this.mounted && (\r\n        <div>\r\n          <ul>\r\n            {this.state.cast.map((actor) => {\r\n              return (\r\n                <li key={actor.id}>\r\n                  {actor.profile_path ? (\r\n                    <img\r\n                      src={`${BASE_URL}/t/p/w200${actor.profile_path}`}\r\n                      alt=\"\"\r\n                    />\r\n                  ) : (\r\n                    <p>No image for this actor</p>\r\n                  )}\r\n                  <p>{actor.name}</p>\r\n                  <p>{`Character: ${actor.character}`}</p>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","const BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst myKey = \"c3df5a3d5b89cc698ddf2b6481fb989c\";\r\n/*\r\nhttps://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\nhttps://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\r\n*/\r\n\r\nexport default function getMovieReviews(movieId) {\r\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${myKey}`;\r\n  return fetch(url).then((response) => response.json());\r\n}\r\n","import React from \"react\";\r\nimport getMovieReviews from \"../../apiServices/getMovieReviews.js\";\r\n\r\nclass Reviews extends React.Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n  mounted = false;\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    getMovieReviews(this.props.match.params.movieId).then((apiOutput) => {\r\n      //console.log(apiOutput.results);\r\n      if (this.mounted) this.setState({ reviews: apiOutput.results });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //console.log(\"unmounted\");\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.mounted && (\r\n        <ul>\r\n          {this.state.reviews.length === 0 ? (\r\n            <p>No rewiews for this movie.</p>\r\n          ) : (\r\n            this.state.reviews.map((review) => {\r\n              return (\r\n                <li key={review.id}>\r\n                  <b>{review.author}</b>\r\n                  <br />\r\n                  {review.content}\r\n                </li>\r\n              );\r\n            })\r\n          )}\r\n        </ul>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React from \"react\";\r\nimport { Link, Route /*, Redirect, BrowserRouter*/ } from \"react-router-dom\";\r\nimport getMovieById from \"../../apiServices/getMovieById.js\";\r\nimport \"./MovieDetailsPage.css\";\r\nimport Cast from \"../../components/Cast/Cast.js\";\r\nimport Reviews from \"../../components/Reviews/Reviews.js\";\r\n\r\nclass MovieDetailsPage extends React.Component {\r\n  state = {\r\n    movie: {},\r\n  };\r\n  mounted = false;\r\n  //path = this.props.location.pathname.split(\"/\");\r\n  //movieId = this.path[2];\r\n\r\n  async componentDidMount() {\r\n    //console.log(\"#1\", this.props.match.params);\r\n    this.mounted = true;\r\n    getMovieById(this.props.match.params.movieId).then((apiOutput) => {\r\n      //console.log(apiOutput);\r\n      if (this.mounted) this.setState({ movie: apiOutput });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    //console.log(\"unmounted\");\r\n    this.mounted = false;\r\n  }\r\n\r\n  render() {\r\n    const BASE_URL = \"https://image.tmdb.org\"; /*https://www.themoviedb.org*/\r\n    //console.log(this.props.history);\r\n    return (\r\n      this.mounted && (\r\n        <>\r\n          <br />\r\n          <button>\r\n            <Link to=\"/\">Go back</Link>\r\n          </button>\r\n          <br />\r\n          <br />\r\n          <div className=\"details\">\r\n            <div>\r\n              <img\r\n                src={`${BASE_URL}/t/p/w400${this.state.movie.backdrop_path}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h3>{`${this.state.movie.title} (${this.state.movie.release_date})`}</h3>\r\n              <p>{`User Score: ${this.state.movie.popularity}%`}</p>\r\n              <h4>Overview</h4>\r\n              <p>{this.state.movie.overview}</p>\r\n              <h4>Genres</h4>\r\n              <p>\r\n                {this.state.movie.genres.reduce((total, current) => {\r\n                  return total + \" \" + current.name;\r\n                }, \"\")}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <p>Additional information</p>\r\n            <ul>\r\n              <li>\r\n                <Link to={`/movies/${this.props.match.params.movieId}/cast`}>\r\n                  Cast\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <Link to={`/movies/${this.props.match.params.movieId}/reviews`}>\r\n                  Reviews\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <Route path=\"/movies/:movieId/cast\" component={Cast} />\r\n          <Route path=\"/movies/:movieId/reviews\" component={Reviews} />\r\n        </>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import React from \"react\";\r\nimport { Link /*, Route, Redirect, BrowserRouter*/ } from \"react-router-dom\";\r\n\r\nclass Nav extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button>\r\n          <Link to=\"/\">Home</Link>\r\n        </button>\r\n        <button>\r\n          <Link to=\"/movies\">Movies</Link>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport { Route, Redirect, /* Switch,*/ BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport HomePage from \"./components/HomePage/HomePage.js\";\nimport MoviesPage from \"./components/MoviesPage/MoviesPage.js\";\nimport MovieDetailsPage from \"./components/MovieDetailsPage/MovieDetailsPage.js\";\n//import Cast from \"./components/Cast/Cast.js\";\n//import Reviews from \"./components/Reviews/Reviews.js\";\nimport Nav from \"./components/Nav/Nav.js\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Route component={Nav} />\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/movies\" exact component={MoviesPage} />\n        <Route path=\"/movies/:movieId\" component={MovieDetailsPage} />\n        <Redirect to=\"/\" />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}